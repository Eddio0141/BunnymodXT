name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *' # Monthly

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Fetch submodules
      run: git submodule update --init --recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install g++-multilib libboost-dev rapidjson-dev mesa-common-dev

    - name: Install Rust
      uses: hecrj/setup-rust-action@v1
      with:
        targets: i686-unknown-linux-gnu

    - name: Generate the build system
      run: |
        mkdir build
        cd build
        cmake ..

    - name: Build
      run: cmake --build build

    - name: Run Rust tests
      run: cargo test --target=i686-unknown-linux-gnu

  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1

    - name: Fetch submodules
      run: git submodule update --init --recursive

    - name: Install Rust
      uses: hecrj/setup-rust-action@v1
      with:
        targets: i686-pc-windows-msvc

    - name: Download RapidJSON
      run: |
        $client = New-Object System.Net.WebClient
        $client.DownloadFile("https://github.com/Tencent/rapidjson/archive/v1.1.0.zip", "../rapidjson.zip")
        # The output path in DownloadFile seems to be relative to the powershell starting directory,
        # not the current directory. So cd .. afterwards to avoid confusion.
        cd ..
        7z x rapidjson.zip

    - name: Generate the build system
      run: |
        mkdir build
        cd build
        cmake -A Win32 -DRapidJSON_ROOT="../../rapidjson-1.1.0" ..

    - name: Build
      run: cmake --build build

    - name: Run Rust tests
      run: cargo test --target=i686-pc-windows-msvc

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install Rust
      uses: hecrj/setup-rust-action@v1
      with:
        components: clippy
        targets: i686-unknown-linux-gnu

    - name: Run Clippy
      run: cargo clippy

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install Rust
      uses: hecrj/setup-rust-action@v1
      with:
        components: rustfmt
        targets: i686-unknown-linux-gnu

    - name: Run rustfmt
      run: cargo fmt -- --check || true
